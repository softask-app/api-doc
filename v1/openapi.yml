openapi: 3.0.3

info:
  version: v1.0.0
  title: Softask
  license:
    name: MIT
  contact:
    name: Elizabeth Paige Harper
    email: eph@softask.app
  description: REST API backing the SofTask mobile app and website.
  x-logo:
    url: https://raw.githubusercontent.com/softask-app/assets/master/logo-wtbg-short.png

servers:
  - url: https://softask.app/api/v1

tags:
  - name: Authentication
    description: API authentication endpoints
  - name: Documentation
    description: API documentation endpoints
  - name: Task Management
    description: Task management endpoints
  - name: Step Management
    description: Task step management endpoints
  - name: User Management
    description: User account management endpoints
  - name: Devices

paths:
  /:
    get:
      operationId: getApiDocs
      description: Renders this API doc.
      summary: API Docs
      tags:
        - Documentation
      responses:
        200:
          description: Success response
          content:
            text/html:
              schema:
                type: string
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /types:
    get:
      operationId: getApiTypeList
      summary: JSON Schema Type List
      description: |
        Expose the JSON schema definitions for the types used by this API as an
        array of objects containing the type ID value as well as a link to the
        type definition in the API.
      tags:
        - Documentation
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/types/get-res.json
          links:
            address:
              operationId: getApiTypeById
              parameters:
                type-id: $response.body#/0/id
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /types/{type-id}:
    parameters:
      - name: type-id
        in: path
        description: ID of the JSON schema type to render.
        schema:
          type: string
        required: true
        allowEmptyValue: false
    get:
      operationId: getApiTypeById
      summary: JSON Schema Type
      description: Shows the JSON schema for the specified type by id.
      tags:
        - Documentation
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: "http://json-schema.org/draft-07/schema#"
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /auth/login:
    post:
      operationId: login
      summary: Login
      description: |
        Log a user in using their email address and password.

        On success this endpoint will return an API key token which can be used
        as the value of the X-Api-Key header to access resources requiring
        a logged in user.
      tags:
        - Authentication
      requestBody:
        description: Login Request Payload
        content:
          application/json:
            schema:
              $ref: types/uri/auth/login/post-req.json
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/auth/login/post-res.json
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /auth/logout:
    post:
      operationId: logout
      summary: Logout
      description: |
        Expires the user session.

        Clients should also discontinue use of the X-Api-Key header as the value
        is no longer valid.  Continued usage of an expired token will result in
        401s from any endpoint requiring a logged in user (the same behavior as
        if the X-Api-Key header was omitted).
      tags:
        - Authentication
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        500:
          $ref: '#/components/responses/500'

  /auth/auto:
    post:
      operationId: autoAuth
      summary: Trusted Device Auth
      description: |
        Create a user session for a trusted device.

        On success this endpoint will return an API key token which can be used
        as the value of the X-Api-Key header to access resources requiring
        a logged in user.
      tags:
        - Authentication
      requestBody:
        description: Auth Request Payload
        content:
          application/json:
            schema:
              $ref: types/uri/auth/auto/post-req.json
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/auth/auto/post-res.json
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /devices:
    get:
      operationId: getDeviceList
      summary: List Used Devices
      tags:
        - Devices
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/devices/get-res.json
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /devices/{device-id}:
    parameters:
      - name: device-id
        in: path
        required: true
        schema:
          $ref: types/common/device-id.json
    get:
      operationId: getDevice
      summary: Device Details
      tags:
        - Devices
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/devices/by-id/get-res.json
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    patch:
      operationId: updateDevice
      summary: Update Device Info
      # TODO: detail the device trust somewhere else... maybe even make that a
      #       separate endpoint?
      description: |
        Update user provided data for a device.

        Fields that may be updated using this endpoint:

        * `nickname`
      tags:
        - Devices
      security:
        - ApiKeyAuth: []
      requestBody:
        description: JSON Patch Body
        content:
          application/json:
            schema:
              $ref: 'http://json.schemastore.org/json-patch#'
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/auth/auto/post-res.json
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    delete:
      operationId: deleteDevice
      summary: Remove Device Record
      description: |
        Removes a device from the user's known devices list.

        This will also remove the associated trust record for the device if one
        exists.
      tags:
        - Devices
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /devices/{device-id}/trust:
    parameters:
      - name: device-id
        in: path
        required: true
        schema:
          $ref: types/common/device-id.json
    post:
      operationId: trustDevice
      summary: Trust A Device
      description: |
        Mark the device with the given `{device-id}` as "trusted".

        On success this endpoint will return, in it's response body, a 64 digit
        token that will be associated with the user and device hardware id.
        Future logins can utilize this token in combination with the user id
        and device hardware ID to auto-auth and create a session using the
        `/auth/auto` endpoint.  This allows devices to authenticate behind the
        scenes for a user without having to store the user's credentials.

        Once the token is issued, it cannot be retrieved or viewed via the API.
        A device that has made this call is expected to store that token locally
        for future use.
      tags:
        - Devices
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/devices/by-id/trust/post-res.json
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    delete:
      operationId: untrustDevice
      summary: Untrust Device
      description: |
        Remove a device's trust token from the service.

        On success this endpoint will have removed any trust records for the
        device with the ID `{device-id}` for the current user.  A device is
        advised to remove it's own stored token after this action as it will
        no longer be valid in use with the `/auth/auto` endpoint.

        If the hardware id `{device-id}` is not known, is not attached to the
        logged in user, or is not trusted, this endpoint will return a 404.
      tags:
        - Devices
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /tasks:
    post:
      operationId: getTaskList
      summary: Create a Task
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /tasks/{task-id}:
    get:
      operationId: getTask
      summary: Task Details
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    patch:
      operationId: updateTask
      summary: Update Task
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      requestBody:
        description: JSON Patch Body
        content:
          application/json:
            schema:
              $ref: 'http://json.schemastore.org/json-patch#'
      responses:
        204:
          $ref: '#/components/responses/204'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    delete:
      operationId: deleteTask
      summary: Delete Task
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /tasks/assigned:
    get:
      operationId: getAssignedTaskList
      summary: List Assigned Tasks
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /tasks/created:
    get:
      operationId: getCreatedTaskList
      summary: List Created Tasks
      tags:
        - Task Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        401:
          $ref: '#/components/responses/401'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /tasks/{task-id}/steps:
    get:
      operationId: getStepList
      summary: List Task Steps
      tags:
        - Step Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /tasks/{task-id}/steps/{step-id}:
    get:
      operationId: getStep
      summary: View Step Details
      tags:
        - Step Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    patch:
      operationId: updateStep
      summary: Update Step
      tags:
        - Step Management
      security:
        - ApiKeyAuth: []
      requestBody:
        description: JSON Patch Body
        content:
          application/json:
            schema:
              $ref: 'http://json.schemastore.org/json-patch#'
      responses:
        204:
          $ref: '#/components/responses/204'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    delete:
      operationId: deleteStep
      summary: Delete Step
      tags:
        - Step Management
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

  /users:
    post:
      operationId: createUser
      summary: Create User
      tags:
        - User Management
      requestBody:
        content:
          application/json:
            schema:
              $ref: types/uri/users/post-req.json
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/users/by-id/get-res.json
        400:
          $ref: '#/components/responses/400'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'

  /users/{user-id}:
    get:
      operationId: getUser
      summary: User Details
      tags:
        - User Management
      security:
        - ApiKeyAuth: []
      responses:
        200:
          description: Success Response
          content:
            application/json:
              schema:
                $ref: types/uri/users/by-id/get-res.json
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
    patch:
      operationId: updateUser
      summary: Update User
      tags:
        - User Management
      security:
        - ApiKeyAuth: []
      requestBody:
        description: JSON Patch Body
        content:
          application/json:
            schema:
              $ref: 'http://json.schemastore.org/json-patch#'
      responses:
        204:
          $ref: '#/components/responses/204'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        429:
          $ref: '#/components/responses/429'
        500:
          $ref: '#/components/responses/500'
    delete:
      operationId: deleteUser
      summary: Delete User Account
      tags:
        - User Management
      security:
        - ApiKeyAuth: []
      responses:
        204:
          $ref: '#/components/responses/204'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-Api-Key
      description: |
        API Key header value provided from service after logging in.
  responses:
    204:
      description: Success (No Content)
      content:
        "*/*":
          schema: {}
    400:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: types/errors/400.json
    401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: types/errors/401.json
    404:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: types/errors/404.json
    429:
      description: Rate Limited
      content:
        application/json:
          schema:
            $ref: types/errors/429.json
    500:
      description: Internal Server Error
      content:
        application/json:
          schema:
            $ref: types/errors/500.json
